version: '3.8'

services:
  # JAXChange API Service
  jaxchange-api:
    build:
      context: ..
      dockerfile: Dockerfile
    container_name: jaxchange-api
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - DATABASE_NAME=jaxchange
      - DATABASE_USER=jaxchange_user
      - DATABASE_PASSWORD=secure_password
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - postgres
      - redis
    volumes:
      - ../src:/app/src:ro
      - ../package.json:/app/package.json:ro
      - ../tsconfig.json:/app/tsconfig.json:ro
    networks:
      - jaxchange-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: jaxchange-postgres
    environment:
      - POSTGRES_DB=jaxchange
      - POSTGRES_USER=jaxchange_user
      - POSTGRES_PASSWORD=secure_password
      - POSTGRES_INITDB_ARGS="--encoding=UTF8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../src/shared/database/migrations:/docker-entrypoint-initdb.d:ro
    ports:
      - "5432:5432"
    networks:
      - jaxchange-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U jaxchange_user -d jaxchange"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: jaxchange-redis
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - jaxchange-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # Redis Commander (Development only)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: jaxchange-redis-commander
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - jaxchange-network
    profiles:
      - development

  # pgAdmin (Development only)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: jaxchange-pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@jaxchange.com
      - PGADMIN_DEFAULT_PASSWORD=admin
      - PGADMIN_DISABLE_POSTFIX=true
    ports:
      - "8080:80"
    depends_on:
      - postgres
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - jaxchange-network
    profiles:
      - development

  # Nginx Reverse Proxy (Production)
  nginx:
    image: nginx:alpine
    container_name: jaxchange-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/ssl/certs:ro
    depends_on:
      - jaxchange-api
    networks:
      - jaxchange-network
    profiles:
      - production
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  jaxchange-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16